import { Injectable } from '@nestjs/common';
import { InjectModel } from '@nestjs/mongoose';
import { Model } from 'mongoose';
import * as bcrypt from 'bcrypt';
import { User, UserDocument, UserRole } from '../database/schemas/user.schema';

@Injectable()
export class UsersSeeder {
  constructor(
    @InjectModel(User.name) private userModel: Model<UserDocument>,
  ) {}

  async seed() {
    console.log('üå± Seeding users...');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
    const existingUsersCount = await this.userModel.countDocuments();
    if (existingUsersCount > 0) {
      console.log('üë• Users already exist, skipping users seeding');
      return;
    }

    const saltRounds = 12;
    const defaultPassword = await bcrypt.hash('password123', saltRounds);

    const users = [
      // –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã
      {
        email: 'admin@chatsystem.com',
        passwordHash: defaultPassword,
        role: UserRole.ADMIN,
        isActivated: true,
        isBlocked: false,
        profile: {
          username: 'admin',
          fullName: '–ì–ª–∞–≤–Ω—ã–π –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
          phone: '+79001234567',
          bio: '–°–∏—Å—Ç–µ–º–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —á–∞—Ç-—Å–∏—Å—Ç–µ–º—ã',
          lastSeenAt: new Date(),
          isOnline: false,
        },
      },
      {
        email: 'admin2@chatsystem.com',
        passwordHash: defaultPassword,
        role: UserRole.ADMIN,
        isActivated: true,
        isBlocked: false,
        profile: {
          username: 'admin_alex',
          fullName: '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ê–¥–º–∏–Ω–æ–≤',
          phone: '+79001234568',
          bio: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ø–æ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º –≤–æ–ø—Ä–æ—Å–∞–º',
          lastSeenAt: new Date(Date.now() - 3600000), // 1 —á–∞—Å –Ω–∞–∑–∞–¥
          isOnline: false,
        },
      },
      
      // –û–ø–µ—Ä–∞—Ç–æ—Ä—ã
      {
        email: 'operator1@chatsystem.com',
        passwordHash: defaultPassword,
        role: UserRole.OPERATOR,
        isActivated: true,
        isBlocked: false,
        profile: {
          username: 'op_maria',
          fullName: '–ú–∞—Ä–∏—è –û–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤–∞',
          phone: '+79001234569',
          bio: '–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –æ–±—â–∏–º –≤–æ–ø—Ä–æ—Å–∞–º. –û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã 3 –≥–æ–¥–∞.',
          lastSeenAt: new Date(),
          isOnline: true,
        },
        operatorStats: {
          totalQuestions: 156,
          resolvedQuestions: 142,
          averageRating: 4.7,
          totalRatings: 89,
          responseTimeAvg: 12.5, // –º–∏–Ω—É—Ç—ã
        },
      },
      {
        email: 'operator2@chatsystem.com',
        passwordHash: defaultPassword,
        role: UserRole.OPERATOR,
        isActivated: true,
        isBlocked: false,
        profile: {
          username: 'op_denis',
          fullName: '–î–µ–Ω–∏—Å –¢–µ—Ö–Ω–∏–∫–æ–≤',
          phone: '+79001234570',
          bio: '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç. –ü–æ–º–æ–≥—É —Å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º–∏ –ø—Ä–æ–±–ª–µ–º–∞–º–∏.',
          lastSeenAt: new Date(Date.now() - 1800000), // 30 –º–∏–Ω—É—Ç –Ω–∞–∑–∞–¥
          isOnline: true,
        },
        operatorStats: {
          totalQuestions: 203,
          resolvedQuestions: 189,
          averageRating: 4.8,
          totalRatings: 134,
          responseTimeAvg: 8.2,
        },
      },
      {
        email: 'operator3@chatsystem.com',
        passwordHash: defaultPassword,
        role: UserRole.OPERATOR,
        isActivated: true,
        isBlocked: false,
        profile: {
          username: 'op_anna',
          fullName: '–ê–Ω–Ω–∞ –ö–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç',
          phone: '+79001234571',
          bio: '–ö–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –ø–æ –±–∏–ª–ª–∏–Ω–≥—É –∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–º –≤–æ–ø—Ä–æ—Å–∞–º.',
          lastSeenAt: new Date(Date.now() - 7200000), // 2 —á–∞—Å–∞ –Ω–∞–∑–∞–¥
          isOnline: false,
        },
        operatorStats: {
          totalQuestions: 98,
          resolvedQuestions: 91,
          averageRating: 4.5,
          totalRatings: 67,
          responseTimeAvg: 15.8,
        },
      },
      {
        email: 'operator4@chatsystem.com',
        passwordHash: defaultPassword,
        role: UserRole.OPERATOR,
        isActivated: true,
        isBlocked: false,
        profile: {
          username: 'op_pavel',
          fullName: '–ü–∞–≤–µ–ª –ü–æ–¥–¥–µ—Ä–∂–∫–∏–Ω',
          phone: '+79001234572',
          bio: '–°—Ç–∞—Ä—à–∏–π –æ–ø–µ—Ä–∞—Ç–æ—Ä. –°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è: —Å–ª–æ–∂–Ω—ã–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã.',
          lastSeenAt: new Date(Date.now() - 600000), // 10 –º–∏–Ω—É—Ç –Ω–∞–∑–∞–¥
          isOnline: true,
        },
        operatorStats: {
          totalQuestions: 324,
          resolvedQuestions: 298,
          averageRating: 4.9,
          totalRatings: 201,
          responseTimeAvg: 6.1,
        },
      },
      
      // –ü–æ—Å–µ—Ç–∏—Ç–µ–ª–∏ (–∫–ª–∏–µ–Ω—Ç—ã)
      {
        email: 'user1@example.com',
        passwordHash: defaultPassword,
        role: UserRole.VISITOR,
        isActivated: true,
        isBlocked: false,
        profile: {
          username: 'ivan_petrov',
          fullName: '–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤',
          phone: '+79001234573',
          bio: '–ö–ª–∏–µ–Ω—Ç –∫–æ–º–ø–∞–Ω–∏–∏',
          lastSeenAt: new Date(),
          isOnline: true,
        },
      },
      {
        email: 'user2@example.com',
        passwordHash: defaultPassword,
        role: UserRole.VISITOR,
        isActivated: true,
        isBlocked: false,
        profile: {
          username: 'elena_sidorova',
          fullName: '–ï–ª–µ–Ω–∞ –°–∏–¥–æ—Ä–æ–≤–∞',
          phone: '+79001234574',
          bio: '–ü–æ—Å—Ç–æ—è–Ω–Ω—ã–π –∫–ª–∏–µ–Ω—Ç',
          lastSeenAt: new Date(Date.now() - 3600000),
          isOnline: false,
        },
      },
      {
        email: 'user3@example.com',
        passwordHash: defaultPassword,
        role: UserRole.VISITOR,
        isActivated: true,
        isBlocked: false,
        profile: {
          username: 'alex_kozlov',
          fullName: '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ö–æ–∑–ª–æ–≤',
          phone: '+79001234575',
          bio: '–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
          lastSeenAt: new Date(Date.now() - 1800000),
          isOnline: false,
        },
      },
      {
        email: 'user4@example.com',
        passwordHash: defaultPassword,
        role: UserRole.VISITOR,
        isActivated: true,
        isBlocked: false,
        profile: {
          username: 'olga_volkova',
          fullName: '–û–ª—å–≥–∞ –í–æ–ª–∫–æ–≤–∞',
          phone: '+79001234576',
          bio: '–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π –∫–ª–∏–µ–Ω—Ç',
          lastSeenAt: new Date(Date.now() - 7200000),
          isOnline: false,
        },
      },
      {
        email: 'user5@example.com',
        passwordHash: defaultPassword,
        role: UserRole.VISITOR,
        isActivated: true,
        isBlocked: false,
        profile: {
          username: 'sergey_novikov',
          fullName: '–°–µ—Ä–≥–µ–π –ù–æ–≤–∏–∫–æ–≤',
          phone: '+79001234577',
          bio: '–ß–∞—Å—Ç–Ω—ã–π –∫–ª–∏–µ–Ω—Ç',
          lastSeenAt: new Date(Date.now() - 300000), // 5 –º–∏–Ω—É—Ç –Ω–∞–∑–∞–¥
          isOnline: true,
        },
      },
      
      // –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
      {
        email: 'blocked@example.com',
        passwordHash: defaultPassword,
        role: UserRole.VISITOR,
        isActivated: true,
        isBlocked: true,
        blacklistedByAdmin: true,
        profile: {
          username: 'blocked_user',
          fullName: '–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
          phone: '+79001234578',
          bio: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—Ä—É—à–∏–ª –ø—Ä–∞–≤–∏–ª–∞',
          lastSeenAt: new Date(Date.now() - 86400000), // 1 –¥–µ–Ω—å –Ω–∞–∑–∞–¥
          isOnline: false,
        },
      },
      
      // –ù–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
      {
        email: 'unactivated@example.com',
        passwordHash: defaultPassword,
        role: UserRole.VISITOR,
        isActivated: false,
        isBlocked: false,
        profile: {
          username: 'unactivated_user',
          fullName: '–ù–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
          phone: '+79001234579',
          bio: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª email',
          lastSeenAt: new Date(Date.now() - 172800000), // 2 –¥–Ω—è –Ω–∞–∑–∞–¥
          isOnline: false,
        },
      },
    ];

    try {
      const createdUsers = await this.userModel.insertMany(users);
      console.log(`‚úÖ Successfully created ${createdUsers.length} users`);
      
      // –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö
      console.log('\nüìã Created users:');
      console.log('üëë Admins:');
      console.log('  - admin@chatsystem.com (password: password123)');
      console.log('  - admin2@chatsystem.com (password: password123)');
      
      console.log('\nüë©‚Äçüíº Operators:');
      console.log('  - operator1@chatsystem.com (–ú–∞—Ä–∏—è, –æ–Ω–ª–∞–π–Ω)');
      console.log('  - operator2@chatsystem.com (–î–µ–Ω–∏—Å, –æ–Ω–ª–∞–π–Ω)');
      console.log('  - operator3@chatsystem.com (–ê–Ω–Ω–∞, –æ—Ñ—Ñ–ª–∞–π–Ω)');
      console.log('  - operator4@chatsystem.com (–ü–∞–≤–µ–ª, –æ–Ω–ª–∞–π–Ω)');
      
      console.log('\nüë• Visitors:');
      console.log('  - user1@example.com (–ò–≤–∞–Ω, –æ–Ω–ª–∞–π–Ω)');
      console.log('  - user2@example.com (–ï–ª–µ–Ω–∞, –æ—Ñ—Ñ–ª–∞–π–Ω)');
      console.log('  - user3@example.com (–ê–ª–µ–∫—Å–∞–Ω–¥—Ä, –æ—Ñ—Ñ–ª–∞–π–Ω)');
      console.log('  - user4@example.com (–û–ª—å–≥–∞, –æ—Ñ—Ñ–ª–∞–π–Ω)');
      console.log('  - user5@example.com (–°–µ—Ä–≥–µ–π, –æ–Ω–ª–∞–π–Ω)');
      
      console.log('\nüö´ Test users:');
      console.log('  - blocked@example.com (–∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω)');
      console.log('  - unactivated@example.com (–Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω)');
      
      console.log('\nüîë Default password for all users: password123\n');
      
    } catch (error) {
      console.error('‚ùå Error seeding users:', error);
      throw error;
    }
  }

  async clear() {
    console.log('üßπ Clearing users collection...');
    await this.userModel.deleteMany({});
    console.log('‚úÖ Users collection cleared');
  }
}