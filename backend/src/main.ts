import * as dotenv from 'dotenv';
dotenv.config(); // ‚úÖ –ü–ï–†–ï–î —Å–æ–∑–¥–∞–Ω–∏–µ–º AppModule

import { NestFactory } from '@nestjs/core';
import { AppModule } from './app.module';

import * as cookieParser from 'cookie-parser';
import { ValidationPipe } from '@nestjs/common';
import { IoAdapter } from '@nestjs/platform-socket.io';
import { DocumentBuilder, SwaggerModule } from '@nestjs/swagger';

async function bootstrap() {
  const app = await NestFactory.create(AppModule);

  // üç™ Cookie parser —Å —Å–µ–∫—Ä–µ—Ç–æ–º –¥–ª—è –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã—Ö cookies
  app.use(cookieParser(process.env.COOKIE_SECRET));

  // ‚úÖ –ì–ª–æ–±–∞–ª—å–Ω–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è DTO
  app.useGlobalPipes(
    new ValidationPipe({
      whitelist: true, // —É–¥–∞–ª—è–µ—Ç –ª–∏—à–Ω–∏–µ –ø–æ–ª—è
      forbidNonWhitelisted: true, // –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ—Ç –æ—à–∏–±–∫—É –ø—Ä–∏ –ª–∏—à–Ω–∏—Ö –ø–æ–ª—è—Ö
      transform: true, // –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏–≤–æ–¥–∏—Ç —Ç–∏–ø—ã
    }),
  );

  // üìÑ Swagger –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å Bearer Auth
  const swaggerConfig = new DocumentBuilder()
    .setTitle('–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è API —á–∞—Ç–∞')
    .setDescription('REST API + WebSocket –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã')
    .setVersion('1.0')
    .addBearerAuth(
      {
        type: 'http',
        scheme: 'bearer',
        bearerFormat: 'JWT',
        name: 'JWT',
        description: '–í–≤–µ–¥–∏—Ç–µ JWT —Ç–æ–∫–µ–Ω',
        in: 'header',
      },
      'JWT-auth', // –ò–º—è —Å—Ö–µ–º—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    )
    .addCookieAuth('refresh_token', {
      type: 'apiKey',
      in: 'cookie',
      name: 'refresh_token',
      description: 'Refresh token –≤ cookie',
    })
    .build();

  const swaggerDocument = SwaggerModule.createDocument(app, swaggerConfig);


  // üåê Swagger UI –Ω–∞ /api-docs
  SwaggerModule.setup('api-docs', app, swaggerDocument);

  // üîê CORS –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
  app.enableCors({
    origin: process.env.CLIENT_URL || 'http://localhost:3001', // –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –¥–æ–º–µ–Ω
    credentials: true, // –†–∞–∑—Ä–µ—à–∏—Ç—å cookies
    methods: ['GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'OPTIONS'],
    allowedHeaders: [
      'Origin',
      'X-Requested-With',
      'Content-Type',
      'Accept',
      'Authorization',
      'Cache-Control',
    ],
  });

  // üîå WebSocket –∞–¥–∞–ø—Ç–µ—Ä
  app.useWebSocketAdapter(new IoAdapter(app));

  // üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  const port = process.env.SERVER_PORT || 3000;
  await app.listen(port);

  // üìä –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞–ø—É—Å–∫–µ
  console.log('üöÄ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ –Ω–∞ –ø–æ—Ä—Ç—É:', port);
  console.log('üìö API Documentation: http://localhost:' + port + '/api-docs');
  console.log('üîó Client URL:', process.env.CLIENT_URL);
  console.log(
    'üç™ Cookie Secret:',
    process.env.COOKIE_SECRET ? '‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω' : '‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω',
  );
  console.log(
    'üîê JWT Secret:',
    process.env.JWT_SECRET ? '‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω' : '‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω',
  );
  console.log(
    'üìß Resend API:',
    process.env.RESEND_API_KEY ? '‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω' : '‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω',
  );
  console.log(
    'üóÑÔ∏è MongoDB:',
    process.env.MONGO_URI ? '‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ' : '‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ',
  );
}

bootstrap();
